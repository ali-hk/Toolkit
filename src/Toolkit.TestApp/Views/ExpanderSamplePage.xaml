<toolkitPrism:MvvmPage x:Class="Toolkit.TestApp.Views.ExpanderSamplePage"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:controls="using:Toolkit.Xaml.Controls"
                       xmlns:core="using:Microsoft.Xaml.Interactions.Core"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
                       xmlns:local="using:Toolkit.TestApp.Views"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:toolkitPrism="using:Toolkit.Prism.Mvvm"
                       xmlns:viewModels="using:Toolkit.TestApp.ViewModels"
                       mc:Ignorable="d">
    <toolkitPrism:MvvmPage.Resources>
        <Style x:Key="ExpanderDropDownStyle" TargetType="controls:Expander">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:Expander">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ExpanderStates">
                                    <VisualState x:Name="Expanded">
                                        <VisualState.Setters>
                                            <Setter Target="_expandedContentPresenter.Visibility" Value="Visible" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed">
                                        <VisualState.Setters>
                                            <Setter Target="_expandedContentPresenter.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Button x:Name="_expanderButton"
                                    Grid.Row="0"
                                    AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                    Content="{TemplateBinding HeaderContent}"
                                    ContentTemplate="{TemplateBinding HeaderContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderContentTemplateSelector}"
                                    Style="{TemplateBinding ExpandButtonStyle}" />

                            <ContentPresenter x:Name="_expandedContentPresenter"
                                              Grid.Row="1"
                                              x:DeferLoadStrategy="Lazy"
                                              Content="{TemplateBinding ExpandedContent}"
                                              ContentTemplate="{TemplateBinding ExpandedContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ExpandedContentTemplateSelector}"
                                              Style="{TemplateBinding ExpandedStyle}"
                                              Visibility="Collapsed" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </toolkitPrism:MvvmPage.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <TextBlock x:Uid="ExpanderSampleTitleTextBlock"
                   Grid.ColumnSpan="3"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   Style="{ThemeResource HeaderTextBlockStyle}" />

        <!--  Expander style sample  -->
        <!--
            The Expander style provides an expander button, separate header and expander content. It is the default style for Expander.
            and behaves like a typical Expander, expanding and collapsing when the expander button is clicked.
        -->
        <TextBlock x:Uid="ExpanderStyleSampleTextBlock"
                   Grid.Row="1"
                   Grid.Column="0"
                   HorizontalAlignment="Center"
                   Style="{ThemeResource SubtitleTextBlockStyle}" />

        <ListView x:Name="expanderStyleListView"
                  Grid.Row="2"
                  Grid.Column="0"
                  ItemsSource="{x:Bind ConcreteDataContext.People}"
                  SelectionMode="None">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <controls:Expander HeaderContentTemplate="{StaticResource HockeyPlayerDataTemplateXBind}">
                        <controls:Expander.ExpandedContent>
                            <StackPanel Orientation="Vertical">
                                <Button x:Uid="ShowMessageButton"
                                        Command="{Binding ElementName=expanderStyleListView,
                                                          Path=DataContext.ShowMessageCommand}"
                                        CommandParameter="{Binding}"
                                        HorizontalAlignment="Stretch" />
                            </StackPanel>
                        </controls:Expander.ExpandedContent>
                        <controls:Expander.ExpandButtonStyle>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                        </controls:Expander.ExpandButtonStyle>
                    </controls:Expander>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="IsTabStop" Value="False" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
        
        <!--  DropDown style sample  -->
        <!--
            The DropDown style provides a header and expanded content. The header is hosted within the expander button.
            It behaves similar to a combobox, expanding and collapsing when the header is clicked.
        -->
        <TextBlock x:Uid="DropDownStyleSampleTextBlock"
                   Grid.Row="1"
                   Grid.Column="1"
                   HorizontalAlignment="Center"
                   Style="{ThemeResource SubtitleTextBlockStyle}" />
        <ListView x:Name="dropDownStyleListView"
                  Grid.Row="2"
                  Grid.Column="1"
                  ItemsSource="{x:Bind ConcreteDataContext.People}"
                  SelectionMode="None">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <controls:Expander HeaderContentTemplate="{StaticResource HockeyPlayerDataTemplateXBind}" Style="{StaticResource ExpanderDropDownStyle}">
                        <controls:Expander.ExpandedContent>
                            <StackPanel Orientation="Vertical">
                                <Button x:Uid="ShowMessageButton"
                                        Command="{Binding ElementName=dropDownStyleListView,
                                                          Path=DataContext.ShowMessageCommand}"
                                        CommandParameter="{Binding}"
                                        HorizontalAlignment="Stretch" />
                            </StackPanel>
                        </controls:Expander.ExpandedContent>
                        <controls:Expander.ExpandButtonStyle>
                            <Style TargetType="Button">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                            </Style>
                        </controls:Expander.ExpandButtonStyle>
                    </controls:Expander>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="IsTabStop" Value="False" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
    </Grid>
</toolkitPrism:MvvmPage>