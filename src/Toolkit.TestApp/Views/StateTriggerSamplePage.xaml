<toolkitPrism:MvvmPage
    x:Class="Toolkit.TestApp.Views.StateTriggerSamplePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:Toolkit.Behaviors"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:Toolkit.TestApp.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkitPrism="using:Toolkit.Prism.Mvvm"
    xmlns:viewModels="using:Toolkit.TestApp.ViewModels"
    mc:Ignorable="d">
    <toolkitPrism:MvvmPage.Resources>
        <DataTemplate x:Key="ExpandedHockeyPlayerDataTemplateXBind" x:DataType="viewModels:HockeyPlayerViewModel">
            <StackPanel
                Width="200"
                Height="200"
                Orientation="Vertical">
                <Image Width="100" Height="100">
                    <Image.Source>
                        <BitmapImage
                            DecodePixelHeight="100"
                            DecodePixelWidth="100"
                            UriSource="{x:Bind Photo}" />
                    </Image.Source>
                </Image>
                <TextBlock HorizontalAlignment="Center" Text="{x:Bind Number}" />
                <TextBlock HorizontalAlignment="Center" Text="{x:Bind FirstName}" />
                <TextBlock HorizontalAlignment="Center" Text="{x:Bind LastName}" />
                <TextBlock HorizontalAlignment="Center" Text="{x:Bind Goals}" />
            </StackPanel>
        </DataTemplate>
    </toolkitPrism:MvvmPage.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <!--  This will trigger whenever the window width becomes >= 1024  -->
                        <AdaptiveTrigger MinWindowWidth="1024" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AdaptiveTriggerGridView.ItemTemplate" Value="{StaticResource ExpandedHockeyPlayerDataTemplateXBind}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <!--  Bind IsActive to any property on the ViewModel  -->
                        <StateTrigger IsActive="{Binding IsGoaltenderData}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StateTriggerGridView.ItemTemplate" Value="{StaticResource GoaltenderDataTemplate}" />
                    </VisualState.Setters>
                    <VisualState.Storyboard>
                        <!--  Note: Setters can NOT use bindings as a Value. Use Storyboards instead.  -->
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="StateTriggerGridView" Storyboard.TargetProperty="ItemsSource">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Goaltenders}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState.Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <TextBlock
            x:Uid="StateTriggerSampleTitleTextBlock"
            Grid.ColumnSpan="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Style="{ThemeResource HeaderTextBlockStyle}" />

        <!--  AdaptiveTrigger Sample: Using AdaptiveTrigger to switch the GridView's ItemTemplate to a bigger one when window width is >=1024  -->
        <TextBlock
            x:Uid="AdaptiveTriggerTextBlock"
            Grid.Row="1"
            Grid.Column="0"
            HorizontalAlignment="Center"
            Style="{ThemeResource SubtitleTextBlockStyle}" />
        <GridView
            x:Name="AdaptiveTriggerGridView"
            Grid.Row="2"
            Grid.Column="0"
            ItemTemplate="{StaticResource HockeyPlayerDataTemplateXBind}"
            ItemsSource="{x:Bind ConcreteDataContext.HockeyPlayers}"
            SelectionMode="None" />

        <!--  StateTrigger Sample: Using StateTrigger to switch the GridView's ItemsSource to a different one based on a ViewModel property  -->
        <TextBlock
            x:Uid="StateTriggerTextBlock"
            Grid.Row="1"
            Grid.Column="1"
            HorizontalAlignment="Center"
            Style="{ThemeResource SubtitleTextBlockStyle}" />
        <Button
            x:Uid="StateTriggerButton"
            Grid.Row="1"
            Grid.Column="1"
            HorizontalAlignment="Right"
            Command="{x:Bind ConcreteDataContext.SwitchDataCommand}" />
        <GridView
            x:Name="StateTriggerGridView"
            Grid.Row="2"
            Grid.Column="1"
            ItemTemplate="{StaticResource HockeyPlayerDataTemplateXBind}"
            ItemsSource="{Binding HockeyPlayers}"
            SelectionMode="None" />
    </Grid>
</toolkitPrism:MvvmPage>